from utime import *
import framebuf

from libs.PicoOled13 import *

# digits 0..9 16x16 bitmaps
# convert font_left.png -threshold 50 -depth 1 MONO:font_left.bin
# convert font_right.png -threshold 50 -depth 1 MONO:font_right.bin

right_biased = [
bytearray([ # 0 
0x00,0x00,0x00,0x0f,0x80,0x1f,0xc0,0x1f,0xc0,0x39,0xe0,0x38,0xe0,0x38,0x60,0x38,
0x70,0x18,0x70,0x1c,0x70,0x1c,0x70,0x1c,0x70,0x0e,0x70,0x0e,0xf0,0x07,0xe0,0x07]),
bytearray([ # 1
0xc0,0x01,0x00,0x0c,0xc0,0x0f,0xc0,0x0f,0xc0,0x07,0x00,0x07,0x00,0x07,0x00,0x07,
0x00,0x07,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0xf0,0x0f,0xf0,0x0f]),
bytearray([ # 2
0x00,0x00,0x80,0x0f,0xc0,0x1f,0xc0,0x3f,0xe0,0x38,0x60,0x38,0x00,0x3c,0x00,0x1c,
0x00,0x1e,0x00,0x0f,0x80,0x07,0xc0,0x01,0xe0,0x00,0xf0,0x0f,0xf8,0x0f,0xf8,0x0f]),
bytearray([ # 3
0x00,0x00,0x80,0x1f,0xc0,0x1f,0xc0,0x3d,0xc0,0x38,0x00,0x1c,0x00,0x1e,0x80,0x0f,
0x80,0x0f,0x00,0x1e,0x00,0x1c,0x00,0x1c,0x10,0x1e,0x38,0x0f,0xf8,0x07,0xf0,0x03]),
bytearray([ # 4
0x00,0x00,0x00,0x1c,0x00,0x1e,0x00,0x1f,0x00,0x1f,0x80,0x0f,0xc0,0x0f,0xc0,0x0f,
0xe0,0x0e,0xf0,0x0e,0xf0,0x1f,0xf8,0x1f,0xf8,0x1f,0x00,0x07,0x00,0x07,0x00,0x07]),
bytearray([ # 5
0x00,0x00,0xc0,0x3f,0xc0,0x3f,0xc0,0x3f,0xc0,0x00,0xe0,0x00,0xe0,0x07,0xe0,0x0f,
0xe0,0x1f,0xe0,0x1c,0x00,0x1c,0x00,0x1e,0x10,0x0e,0x78,0x0f,0xf8,0x07,0xf0,0x03]),
bytearray([ # 6
0x00,0x00,0x00,0x3f,0x80,0x3f,0xc0,0x13,0xc0,0x01,0xe0,0x0f,0xe0,0x1f,0xf0,0x1f,
0xf0,0x1c,0x70,0x1c,0x70,0x1c,0x70,0x1c,0x70,0x0e,0x70,0x0f,0xe0,0x07,0xe0,0x03]),
bytearray([ # 7
0x00,0x00,0xc0,0x7f,0xe0,0x3f,0xe0,0x3f,0x00,0x3c,0x00,0x1e,0x00,0x0e,0x00,0x07,
0x80,0x07,0x80,0x03,0xc0,0x03,0xc0,0x01,0xc0,0x01,0xe0,0x00,0xe0,0x00,0xe0,0x00]),
bytearray([ # 8
0x00,0x00,0x80,0x1f,0xc0,0x3f,0xc0,0x39,0xe0,0x38,0xe0,0x38,0xe0,0x1f,0xc0,0x0f,
0xe0,0x0f,0xf0,0x1e,0x70,0x1c,0x70,0x1c,0x70,0x0e,0xf0,0x0f,0xf0,0x07,0xe0,0x03]),
bytearray([ # 9
0x00,0x06,0x80,0x1f,0xc0,0x1f,0xc0,0x19,0xe0,0x38,0xe0,0x38,0xe0,0x38,0x60,0x1c,
0xe0,0x1e,0xe0,0x1f,0xe0,0x1f,0xc0,0x0f,0x00,0x0f,0xf0,0x07,0xf0,0x03,0xf0,0x01]),
]
left_biased = [
bytearray([ # 0
0x00,0x00,0xc0,0x03,0xe0,0x07,0xf0,0x07,0x78,0x0e,0x38,0x0e,0x38,0x0e,0x1c,0x06,
0x1c,0x07,0x1c,0x07,0x1c,0x07,0x1c,0x07,0x9c,0x03,0xdc,0x03,0xfc,0x01,0xf8,0x00]),
bytearray([ # 1
0x70,0x00,0x80,0x03,0xf0,0x03,0xf0,0x01,0xf0,0x01,0xc0,0x01,0xc0,0x01,0xc0,0x01,
0xe0,0x00,0xe0,0x00,0xe0,0x00,0xe0,0x00,0xe0,0x00,0x60,0x00,0xfc,0x03,0xfc,0x01]),
bytearray([ # 2
0x00,0x00,0xe0,0x03,0xf0,0x07,0xf8,0x07,0x38,0x0f,0x18,0x0e,0x00,0x07,0x00,0x07,
0x80,0x07,0xc0,0x03,0xe0,0x00,0x70,0x00,0x3c,0x00,0xfe,0x03,0xfe,0x03,0xfe,0x03]),
bytearray([ # 3
0x00,0x00,0xe0,0x03,0xf0,0x07,0x70,0x07,0x30,0x07,0x00,0x07,0x80,0x07,0xe0,0x03,
0xe0,0x03,0x80,0x03,0x00,0x07,0x80,0x07,0x84,0x03,0xce,0x03,0xfe,0x01,0xfc,0x00]),
bytearray([ # 4
0x00,0x00,0x00,0x07,0x80,0x07,0xc0,0x07,0xc0,0x07,0xe0,0x03,0xf0,0x03,0xf8,0x03,
0xb8,0x03,0x9c,0x03,0xfc,0x07,0xfe,0x07,0xfe,0x07,0xc0,0x01,0xc0,0x01,0xc0,0x00]),
bytearray([ # 5
0x00,0x00,0xf0,0x0f,0xf0,0x0f,0xf0,0x07,0x30,0x00,0x38,0x00,0xf8,0x01,0xf8,0x03,
0xf8,0x03,0x38,0x07,0x00,0x07,0x80,0x03,0x84,0x03,0xce,0x03,0xfe,0x01,0xfc,0x00]),
bytearray([ # 6
0x00,0x00,0xc0,0x0f,0xe0,0x07,0xf0,0x04,0x70,0x00,0xf8,0x03,0xf8,0x07,0xfc,0x07,
0x3c,0x07,0x1c,0x07,0x1c,0x07,0x1c,0x07,0x9c,0x03,0xdc,0x03,0xfc,0x01,0xf8,0x00]),
bytearray([ # 7
0x00,0x00,0xf8,0x0f,0xf8,0x0f,0xf8,0x0f,0x00,0x07,0x80,0x07,0xc0,0x03,0xc0,0x01,
0xe0,0x01,0xe0,0x00,0x70,0x00,0x70,0x00,0x70,0x00,0x38,0x00,0x38,0x00,0x38,0x00]),
bytearray([ # 8
0x00,0x00,0xe0,0x07,0xf0,0x07,0x78,0x0e,0x38,0x0e,0x38,0x07,0xf8,0x07,0xf0,0x03,
0xf8,0x03,0xbc,0x07,0x1c,0x07,0x1c,0x07,0x9c,0x03,0xfc,0x03,0xfc,0x01,0xf8,0x00]),
bytearray([ # 9
0x80,0x01,0xe0,0x07,0xf0,0x07,0x78,0x07,0x38,0x06,0x38,0x06,0x18,0x07,0x1c,0x07,
0xb8,0x07,0xf8,0x07,0xf8,0x07,0xf0,0x03,0xc0,0x03,0xfc,0x01,0xfc,0x00,0x7c,0x00]),
]

combined = [
bytearray([ # :0
0x00,0x04,0x80,0x3f,0xc0,0x7f,0xe0,0x71,0xe7,0xe0,0xe7,0xe0,0xe7,0xe0,0xe0,0xe0,
0xe0,0xe0,0xe0,0xe0,0xe0,0xe0,0xe0,0xf0,0xc7,0x79,0xc7,0x7f,0x87,0x3f,0x00,0x00]),
bytearray([ # :1
0x00,0x00,0x00,0x0f,0x80,0x0f,0xc0,0x0f,0xc7,0x0e,0x07,0x0e,0x07,0x0e,0x00,0x0e,
0x00,0x0e,0x00,0x0e,0x00,0x0e,0x00,0x0e,0x07,0x0e,0xc7,0xff,0xc7,0xff,0x00,0x00]),
bytearray([ # :2
0x00,0x04,0x80,0x3f,0xc0,0x7f,0xe0,0x71,0xe7,0xe0,0x07,0x70,0x07,0x78,0x00,0x7c,
0x00,0x3e,0x00,0x0f,0x80,0x07,0xc0,0x03,0xe7,0x01,0xe7,0xff,0xe7,0xff,0x00,0x00]),
bytearray([ # :3
0x00,0x06,0xc0,0x3f,0xc0,0x7f,0xe0,0x71,0xe7,0x70,0x07,0x70,0x07,0x7f,0x00,0x3f,
0x00,0x7f,0x00,0xf0,0xc0,0xe0,0xe0,0xe0,0xe7,0xf9,0xc7,0x7f,0x87,0x3f,0x00,0x00]),
bytearray([ # :4
0x00,0x00,0x00,0x38,0x00,0x3c,0x00,0x3e,0x07,0x3f,0x07,0x3f,0x87,0x3b,0xc0,0x39,
0xe0,0x39,0xe0,0x38,0xf0,0xff,0xf0,0xff,0x07,0x38,0x07,0x38,0x07,0x38,0x00,0x00]),
bytearray([ # :5
0x00,0x00,0xc0,0x7f,0xc0,0x7f,0xc0,0x00,0xe7,0x00,0xe7,0x0c,0xe7,0x3f,0xe0,0x7f,
0xe0,0xf0,0x00,0xe0,0x00,0xe0,0xe0,0xf0,0xe7,0xf9,0xc7,0x7f,0x87,0x3f,0x00,0x00]),
bytearray([ # :6
0x00,0x1e,0x80,0x3f,0xc0,0x7f,0xc0,0x71,0xe7,0x01,0xe7,0x1e,0xe7,0x7f,0xe0,0x7f,
0xe0,0xf1,0xe0,0xe0,0xe0,0xe0,0xe0,0xe1,0xc7,0x7b,0xc7,0x7f,0x07,0x3f,0x00,0x00]),
bytearray([ # :7
0x00,0x00,0xe0,0xff,0xe0,0xff,0x00,0x70,0x07,0x78,0x07,0x38,0x07,0x1c,0x00,0x1c,
0x00,0x0e,0x00,0x0e,0x00,0x07,0x00,0x07,0x07,0x07,0x07,0x07,0x07,0x07,0x00,0x00]),
bytearray([ # :8
0x00,0x0f,0xc0,0x7f,0xc0,0x7f,0xe0,0x71,0xe7,0xe0,0xe7,0x71,0xc7,0x7f,0xc0,0x3f,
0xe0,0x7f,0xe0,0xe0,0xe0,0xe0,0xe0,0xe0,0xe7,0xf1,0xc7,0x7f,0x87,0x3f,0x00,0x00]),
bytearray([ # :9
0x00,0x0f,0xc0,0x3f,0xc0,0x7f,0xe0,0x71,0xe7,0xf0,0xe7,0xe0,0xe0,0xf0,0xe0,0xf9,
0xc0,0xff,0x80,0xff,0x00,0xf0,0xe0,0x70,0xe7,0x79,0xc7,0x3f,0x87,0x1f,0x00,0x00]),
]

fb = []
'''
for i in range(len(right_biased)):
    fb.append(framebuf.FrameBuffer(right_biased[i], 16, 16, framebuf.MONO_HMSB))
for i in range(len(left_biased)):
    fb.append(framebuf.FrameBuffer(left_biased[i], 16, 16, framebuf.MONO_HMSB))
'''
for i in range(len(combined)):
    fb.append(framebuf.FrameBuffer(combined[i], 16, 16, framebuf.MONO_HMSB))

display=OLED_1inch3_SPI()
#display=FastShow()

display.fill(0x0000)
display.text("Blit Test:",0,0,0xffff)
display.show()

c = 0
last = "--------"
start = ticks_ms()
while c < 1000:
    data = '{:08d}'.format(c)
    c=c+1
    
    # find 1st character that has changed, only update from there
    for j in range(len(data)):
        if data[j]!=last[j]:
            break
    last = data

    '''
    for i in range(j,8):
        # blit with double char set, slightly offset
        if i & 1 == 1:
            # offset left
            display.blit(fb[int(data[i])+10], 16*i, 48)
        else:
            # offset right
            display.blit(fb[int(data[i])], 16*i, 48)

    display.show()#49)#, 64)#, j*2)
    '''
    for i in range(7,(j&6)-1,-1):
        print(j,i, data[i])
        # blit with combined char set, slightly offset
        display.blit(fb[int(data[i])],
            (16*i)-(4 if i&1 else 0), 48)
            
    # blank first ':'
    if j < 2:
        display.rect(0,48,4,16,display.black,True)
        
    #display.show(49)#, 64, (j&6)*2)
    display.show(48, 64, (j&6)*2)

display.text("time: "+str(ticks_diff(ticks_ms(), start))+"ms",0,16,0xffff)
display.show()
